//
//  Baekjoon_11404.swift
//  CodingTest
//
//  Created by jhkim on 2023/01/30.
//

import Foundation

/// 플로이드 와샬 알고리즘 (Floyd-Warshall)  - DP, 다익스트라 알고리즘과 비교
/// 모든 노드에서 다른 모든 노느까지의 최단 경로 모두 계산
/// 거쳐가는 노드를 기준으로 알고리즘을 수행
/// 2차원 테이블에 최단 거리 정보 저장 => 점화식 계산
/// 점화식에 맞게 3중 반복문을 이용해 2차원 테이블 갱신
/// 모든 노드에서 다른 모든 노드까지의 최단 거리를 구하는 과정에서 시간 복잡도는 Ologn^3 굉장히 길다.
/// 노드의 갯수가 적은 상황에서 효과적이다. 노드와 간선의 갯수가 많다면 다익스트라 알고리즘을 고려
/// 점화식 : Dab = min(Dab, Dak + Dkb) => a에서 b로가는 최단거리 VS a에서 k를 거쳐 b로 가는 거리


/// [백준 11404][골드4] 플로이드(https://www.acmicpc.net/problem/11404)
class Baekjoon_11404 {
    
}
